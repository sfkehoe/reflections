What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository it creates a .git repository which 
	will track version changes. If the it's not initialized your project
	changes don't get tracked.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	The staging area connects the working area and repository by acting as a m-
	iddle ground between the two. The staging area lists the files you wish to
	make commits for into the repository. The working area is the directory in 
	which you are working at that particular time.
	
	The value it offers lies in not having to commit all changes at once, or f-
	iles which are not having any changes being made to them. This way you can 
	see the specific files that were changed for a given commit at the log.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
