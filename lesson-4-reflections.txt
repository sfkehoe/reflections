When would you want to use a remote repository rather than keeping all your work
local?

    When working from a different computer or multiple computers, when working
    with another person or group of people on a projects.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Remote repository may have a number of people working on it at the same
	time, or may have a number of people working on it as part of an open source
	project. You may not wish to have all of the repository changes pulled to 
	your local workspace.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branch -
		Local branch of project, without access to other branches, used to test
		experimental features, or add new features before committing to master
	Clone -
		Remote to local copy of repository
	Fork -
		Remote to remote (GitHub to GitHub) copy of repository

What is the benefit of having a copy of the last known state of the remote
stored locally?

	The system is able to use this state to make inferences about how far
	ahead or behind the local project is compared to the remote, it also
	doesn't require internet access to do so. This allows remote users to
	take a copy of the project to work on in locations that don't have
	internet access.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

	With
		Easier
			Keeping track of changes to a project by person on it. The ability
			to review changes before committing them to the main project.
		Harder
			Getting projects from person to person in fewer steps.
When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making a change in a separate branch allows you to show potential changes
	to the project owner or other people working on a project while not making
	those changes under them and causing a workflow issue.
